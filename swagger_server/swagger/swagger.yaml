---
swagger: "2.0"
info:
  description: "Provides functions to P.L.A.N.T.S. sinks"
  version: "1.0.0"
  title: "P.L.A.N.T.S. sink api"
  license:
    name: "AGPL-v3.0"
    url: "https://www.gnu.org/licenses/agpl-3.0.en.html"
host: "localhost:8080"
tags:
- name: "sink"
  description: "Operations about plants"
schemes:
- "https"
- "http"
paths:
  /sink:
    put:
      tags:
      - "sink"
      summary: "Create a new plant"
      description: "This can be done by the sink"
      operationId: "add_plant"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "plant"
        description: "a plant object"
        required: true
        schema:
          $ref: "#/definitions/plant"
      responses:
        200:
          description: "Ok"
        400:
          description: "Missing infomation"
        409:
          description: "The plant already exists"
      x-swagger-router-controller: "swagger_server.controllers.sink_controller"
  /sink/{plant_id}:
    post:
      tags:
      - "sink"
      summary: "Set the sensed values"
      description: "Set sensed value for the microbit with plant_id."
      operationId: "set_values"
      consumes:
      - "application/json"
      parameters:
      - name: "plant_id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "data"
        required: false
        schema:
          $ref: "#/definitions/data"
      responses:
        200:
          description: "Ok"
        400:
          description: "Bad request"
        404:
          description: "The plant doesn't exists"
      x-swagger-router-controller: "swagger_server.controllers.sink_controller"
definitions:
  event:
    type: "object"
    required:
    - "data"
    - "return_address"
    properties:
      microbit:
        type:
          integer
        format:
          int64
      data:
        $ref: "#/definitions/filter"
      return_address:
        type: "string"
  filter:
    type: "object"
    properties:
      sensor:
        type: "string"
      min_value:
        type: "integer"
      max_value:
        type: "integer"
      min_time:
        type: "integer"
        format: "int64"
      max_time:
        type: "integer"
        format: "int64"
      frequency:
        type: integer
  data:
    type: "object"
    required:
    - "microbit"
    - "sensor"
    - "timestamp"
    - "value"
    properties:
      microbit:
        type: "integer"
        format: "int64"
      sensor:
        type: "string"
      value:
        type: "integer"
        format: "int64"
      timestamp:
        type: "integer"
        format: "int64"
    example:
      sensor: "sensor"
      value: 0
      timestamp: 6
  plant:
    type: "object"
    required:
    - "microbit"
    - "network"
    properties:
      microbit:
        type: "integer"
        format: "int64"
      network:
        type: "integer"
        format: "int64"
      description:
        type: "string"
    example:
      microbit: 0
      description: "description"
      network: 6
  inline_response_200:
    properties:
      event_id:
        type: "string"
    example:
      event_id: "event_id"
